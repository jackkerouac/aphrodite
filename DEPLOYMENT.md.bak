# Aphrodite v4.0.0 Deployment Guide

## üöÄ Quick Start Options

Choose your preferred deployment method:

### Option 1: Pinned Version (Recommended for Production)
```bash
# Download the specific v4.0.0 configuration
curl -o docker-compose.yml https://raw.githubusercontent.com/jackkerouac/aphrodite/v4.0.0/docker-compose.yml
curl -o .env.example https://raw.githubusercontent.com/jackkerouac/aphrodite/v4.0.0/env.example

# Uses: ghcr.io/jackkerouac/aphrodite:4.0.0
```

### Option 2: Latest Version (Auto-updates)
```bash
# Download the latest configuration  
curl -o docker-compose.yml https://raw.githubusercontent.com/jackkerouac/aphrodite/v4.0.0/docker-compose.latest.yml
curl -o .env.example https://raw.githubusercontent.com/jackkerouac/aphrodite/v4.0.0/env.example

# Uses: ghcr.io/jackkerouac/aphrodite:latest
```

## ‚öôÔ∏è Configuration

1. **Copy environment template:**
```bash
cp .env.example .env
```

2. **Edit your settings:**
```bash
# Required: Set secure passwords
POSTGRES_PASSWORD=your-secure-database-password
SECRET_KEY=your-very-secure-secret-key

# Optional: Change port (default: 8000)
APHRODITE_PORT=8000

# Optional: Set log level (debug, info, warning, error)
LOG_LEVEL=info
```

3. **Deploy:**
```bash
docker-compose up -d
```

4. **Access:**
- **Frontend:** http://localhost:8000
- **API Docs:** http://localhost:8000/api/docs
- **Health:** http://localhost:8000/health/live

## üîÑ Version Comparison

| Deployment Method | Image Tag | Benefits | Best For |
|------------------|-----------|----------|----------|
| **Pinned Version** | `4.0.0` | ‚Ä¢ Predictable<br>‚Ä¢ No surprise updates<br>‚Ä¢ Rollback friendly | ‚Ä¢ Production<br>‚Ä¢ Enterprise<br>‚Ä¢ Stability first |
| **Latest Version** | `latest` | ‚Ä¢ Auto-updates<br>‚Ä¢ Latest features<br>‚Ä¢ Latest fixes | ‚Ä¢ Development<br>‚Ä¢ Personal use<br>‚Ä¢ Feature testing |

## üì¶ Available Images

Both deployment options pull from the same multi-platform images:

```bash
# Specific version (pinned)
docker pull ghcr.io/jackkerouac/aphrodite:4.0.0

# Latest version (auto-updates)  
docker pull ghcr.io/jackkerouac/aphrodite:latest
```

**Platforms:** AMD64, ARM64 (Apple Silicon, Raspberry Pi 4+)

## üîß Advanced Configuration

### External Database
```yaml
# In docker-compose.yml, replace the database section with:
aphrodite:
  environment:
    DATABASE_URL: postgresql+asyncpg://user:pass@your-db-host:5432/aphrodite
```

### External Redis
```yaml
aphrodite:
  environment:
    REDIS_URL: redis://your-redis-host:6379/0
```

### Background Worker (Optional)
```bash
# Enable background processing
docker-compose --profile worker up -d
```

## üîÑ Updating

### Pinned Version (4.0.0)
```bash
# Manual update to newer version
docker-compose down
docker pull ghcr.io/jackkerouac/aphrodite:4.0.1  # or newer
# Update docker-compose.yml image tag
docker-compose up -d
```

### Latest Version  
```bash
# Automatic update
docker-compose pull
docker-compose up -d
```

## üåü First-Time Setup

1. **Deploy** using either method above
2. **Access** http://localhost:8000 in your browser
3. **Configure** Jellyfin connection in Settings
4. **Import** your media library

The Poster Manager will be empty until you configure Jellyfin - this is normal for new installations!

## üÜò Troubleshooting

### Check Status
```bash
docker-compose ps
docker-compose logs aphrodite
```

### Clean Restart
```bash
docker-compose down
docker-compose up -d
```

### Health Check
```bash
curl http://localhost:8000/health/live
```

Expected response: `{"status":"alive","timestamp":"..."}`

## üîó Support

- **Documentation:** [GitHub Wiki](https://github.com/jackkerouac/aphrodite/wiki)
- **Issues:** [GitHub Issues](https://github.com/jackkerouac/aphrodite/issues)
- **Discussions:** [GitHub Discussions](https://github.com/jackkerouac/aphrodite/discussions)
