"use strict";exports.id=509,exports.ids=[298,509],exports.modules={14952:(t,e,a)=>{a.d(e,{A:()=>s});let s=(0,a(62688).A)("chevron-right",[["path",{d:"m9 18 6-6-6-6",key:"mthhwq"}]])},40228:(t,e,a)=>{a.d(e,{A:()=>s});let s=(0,a(62688).A)("calendar",[["path",{d:"M8 2v4",key:"1cmpym"}],["path",{d:"M16 2v4",key:"4m81vk"}],["rect",{width:"18",height:"18",x:"3",y:"4",rx:"2",key:"1hopcy"}],["path",{d:"M3 10h18",key:"8toen8"}]])},41312:(t,e,a)=>{a.d(e,{A:()=>s});let s=(0,a(62688).A)("users",[["path",{d:"M16 21v-2a4 4 0 0 0-4-4H6a4 4 0 0 0-4 4v2",key:"1yyitq"}],["path",{d:"M16 3.128a4 4 0 0 1 0 7.744",key:"16gr8j"}],["path",{d:"M22 21v-2a4 4 0 0 0-3-3.87",key:"kshegd"}],["circle",{cx:"9",cy:"7",r:"4",key:"nufk8"}]])},47033:(t,e,a)=>{a.d(e,{A:()=>s});let s=(0,a(62688).A)("chevron-left",[["path",{d:"m15 18-6-6 6-6",key:"1wnfg3"}]])},63503:(t,e,a)=>{a.d(e,{Cf:()=>y,Es:()=>p,L3:()=>g,c7:()=>h,lG:()=>o,rr:()=>u,zM:()=>r});var s=a(60687);a(43210);var i=a(26134),n=a(11860),c=a(4780);function o({...t}){return(0,s.jsx)(i.bL,{"data-slot":"dialog",...t})}function r({...t}){return(0,s.jsx)(i.l9,{"data-slot":"dialog-trigger",...t})}function l({...t}){return(0,s.jsx)(i.ZL,{"data-slot":"dialog-portal",...t})}function d({className:t,...e}){return(0,s.jsx)(i.hJ,{"data-slot":"dialog-overlay",className:(0,c.cn)("data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 fixed inset-0 z-50 bg-black/50",t),...e})}function y({className:t,children:e,showCloseButton:a=!0,...o}){return(0,s.jsxs)(l,{"data-slot":"dialog-portal",children:[(0,s.jsx)(d,{}),(0,s.jsxs)(i.UC,{"data-slot":"dialog-content",className:(0,c.cn)("bg-background data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 fixed top-[50%] left-[50%] z-50 grid w-full max-w-[calc(100%-2rem)] translate-x-[-50%] translate-y-[-50%] gap-4 rounded-lg border p-6 shadow-lg duration-200 sm:max-w-lg",t),...o,children:[e,a&&(0,s.jsxs)(i.bm,{"data-slot":"dialog-close",className:"ring-offset-background focus:ring-ring data-[state=open]:bg-accent data-[state=open]:text-muted-foreground absolute top-4 right-4 rounded-xs opacity-70 transition-opacity hover:opacity-100 focus:ring-2 focus:ring-offset-2 focus:outline-hidden disabled:pointer-events-none [&_svg]:pointer-events-none [&_svg]:shrink-0 [&_svg:not([class*='size-'])]:size-4",children:[(0,s.jsx)(n.A,{}),(0,s.jsx)("span",{className:"sr-only",children:"Close"})]})]})]})}function h({className:t,...e}){return(0,s.jsx)("div",{"data-slot":"dialog-header",className:(0,c.cn)("flex flex-col gap-2 text-center sm:text-left",t),...e})}function p({className:t,...e}){return(0,s.jsx)("div",{"data-slot":"dialog-footer",className:(0,c.cn)("flex flex-col-reverse gap-2 sm:flex-row sm:justify-end",t),...e})}function g({className:t,...e}){return(0,s.jsx)(i.hE,{"data-slot":"dialog-title",className:(0,c.cn)("text-lg leading-none font-semibold",t),...e})}function u({className:t,...e}){return(0,s.jsx)(i.VY,{"data-slot":"dialog-description",className:(0,c.cn)("text-muted-foreground text-sm",t),...e})}},64298:(t,e,a)=>{a.d(e,{A:()=>r,apiService:()=>o});let s=()=>"",i=t=>{let e=s();return`${e}${t}`};class n extends Error{constructor(t,e,a){super(t),this.status=e,this.response=a,this.name="ApiError"}}async function c(t){if(console.log(`🌐 API Response: ${t.status} ${t.url}`),!t.ok){let e=`HTTP ${t.status}: ${t.statusText}`;try{let a=await t.json();e=a.error||a.message||e}catch{}throw console.error(`❌ API Error: ${e} (${t.url})`),new n(e,t.status)}try{let e=await t.json();return console.log(`✅ API Success: ${t.url}`),e}catch{return console.log(`⚠️ API No JSON: ${t.url}`),{}}}let o={getConfig:async t=>c(await fetch(i(`/api/v1/config/${t}`))),updateConfig:async(t,e)=>c(await fetch(i(`/api/v1/config/${t}`),{method:"PUT",headers:{"Content-Type":"application/json"},body:JSON.stringify(e)})),getConfigFiles:async()=>c(await fetch(i("/api/v1/config/files"))),testJellyfinConnection:async t=>c(await fetch(i("/api/v1/config/test-jellyfin"),{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify(t)})),testConnection:async(t,e)=>c(await fetch(i(`/api/v1/config/test-${t}`),{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify(e)})),getSystemStatus:async()=>c(await fetch(i("/health/detailed"))),getSystemInfo:async()=>c(await fetch(i("/api/v1/system/info"))),getSystemConfig:async()=>c(await fetch(i("/api/v1/config/system"))),getPreviewBadgeTypes:async()=>c(await fetch(i("/api/v1/preview/badge-types"))),generatePreview:async t=>c(await fetch(i("/api/v1/preview/generate"),{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify(t)})),getPreviewLibraries:async()=>c(await fetch(i("/api/v1/preview/libraries"))),async getPreviewMedia(t){let e=new URLSearchParams;t?.library_id&&e.set("library_id",t.library_id),t?.search&&e.set("search",t.search),t?.page&&e.set("page",t.page.toString()),t?.limit&&e.set("limit",t.limit.toString());let a=i(`/api/v1/preview/media${e.toString()?"?"+e.toString():""}`);return c(await fetch(a))},async getMedia(t){let e=new URLSearchParams;t?.page&&e.set("page",t.page.toString()),t?.per_page&&e.set("per_page",t.per_page.toString()),t?.search&&e.set("search",t.search),t?.media_type&&e.set("media_type",t.media_type);let a=i(`/api/v1/media${e.toString()?"?"+e.toString():""}`);return c(await fetch(a))},getMediaItem:async t=>c(await fetch(i(`/api/v1/media/${t}`))),scanLibrary:async()=>c(await fetch(i("/api/v1/media/scan"),{method:"POST"})),async getJobs(t){let e=new URLSearchParams;t?.user_id&&e.set("user_id",t.user_id);let a=i(`/api/v1/workflow/jobs/${e.toString()?"?"+e.toString():""}`);return c(await fetch(a))},createJob:async t=>c(await fetch(i("/api/v1/jobs"),{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify(t)})),getJob:async t=>c(await fetch(i(`/api/v1/workflow/jobs/${t}`))),async getSchedules(t){let e=new URLSearchParams;t?.skip&&e.set("skip",t.skip.toString()),t?.limit&&e.set("limit",t.limit.toString());let a=i(`/api/v1/schedules${e.toString()?"?"+e.toString():""}`);return c(await fetch(a))},createSchedule:async t=>c(await fetch(i("/api/v1/schedules"),{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify(t)})),updateSchedule:async(t,e)=>c(await fetch(i(`/api/v1/schedules/${t}`),{method:"PUT",headers:{"Content-Type":"application/json"},body:JSON.stringify(e)})),deleteSchedule:async t=>c(await fetch(i(`/api/v1/schedules/${t}`),{method:"DELETE"})),async getScheduleHistory(t){let e=new URLSearchParams;t?.skip&&e.set("skip",t.skip.toString()),t?.limit&&e.set("limit",t.limit.toString()),t?.schedule_id&&e.set("schedule_id",t.schedule_id),t?.status&&e.set("status",t.status);let a=i(`/api/v1/schedules/executions/history${e.toString()?"?"+e.toString():""}`);return c(await fetch(a))},getScheduleExecution:async(t,e)=>c(await fetch(i(`/api/v1/schedules/${t}/executions/${e}`))),executeSchedule:async t=>c(await fetch(i(`/api/v1/schedules/${t}/execute`),{method:"POST"})),getScheduleBadgeTypes:async()=>c(await fetch(i("/api/v1/schedules/config/badge-types"))),getScheduleCronPresets:async()=>c(await fetch(i("/api/v1/schedules/config/cron-presets"))),getScheduleLibraries:async()=>c(await fetch(i("/api/v1/schedules/config/libraries"))),async clearScheduleHistory(t){let e=t?i(`/api/v1/schedules/executions/history?schedule_id=${t}`):i("/api/v1/schedules/executions/history");return c(await fetch(e,{method:"DELETE"}))},getAnalyticsOverview:async()=>c(await fetch(i("/api/v1/analytics/overview"))),getJobStatusDistribution:async()=>c(await fetch(i("/api/v1/analytics/jobs/status-distribution"))),getProcessingTrends:async(t=30)=>c(await fetch(i(`/api/v1/analytics/jobs/trends?days=${t}`))),getJobTypeDistribution:async()=>c(await fetch(i("/api/v1/analytics/jobs/types"))),getScheduleAnalytics:async()=>c(await fetch(i("/api/v1/analytics/schedules"))),getSystemPerformance:async()=>c(await fetch(i("/api/v1/analytics/performance"))),advancedActivitySearch:async t=>c(await fetch(i("/api/v1/activities/search"),{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify(t)})),getSearchSuggestions:async()=>c(await fetch(i("/api/v1/activities/search/suggestions"))),getActivityStatistics:async t=>c(await fetch(i("/api/v1/activities/statistics"),{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify(t)})),getBatchAnalytics:async t=>c(await fetch(i(`/api/v1/analytics/batch/${t}`))),getBatchPerformanceAnalytics:async t=>c(await fetch(i(`/api/v1/analytics/batch/${t}/performance`))),getRecentBatches:async(t=7,e=20)=>c(await fetch(i(`/api/v1/analytics/batches/recent?days=${t}&limit=${e}`))),getUserActivitySummary:async(t,e=30)=>c(await fetch(i(`/api/v1/analytics/users/${t}/summary?days=${e}`))),getUserActivityTimeline:async(t,e=30)=>c(await fetch(i(`/api/v1/analytics/users/${t}/timeline?days=${e}`))),getTopUsers:async(t=30,e=10)=>c(await fetch(i(`/api/v1/analytics/users/top?days=${t}&limit=${e}`))),getSystemAnalyticsOverview:async(t=7)=>c(await fetch(i(`/api/v1/analytics/system/overview?days=${t}`))),async getActivityTypeDetails(t,e){let a=new URLSearchParams;e?.page&&a.set("page",e.page.toString()),e?.limit&&a.set("limit",e.limit.toString()),e?.status&&a.set("status",e.status),e?.days&&a.set("days",e.days.toString());let s=i(`/api/v1/analytics/activity-details/${t}${a.toString()?"?"+a.toString():""}`);return c(await fetch(s))}},r=o}};